<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-09-28T22:21:53+03:00</updated><id>/feed.xml</id><title type="html">Santeri Hukari</title><subtitle>© 2021 Santeri Hukari</subtitle><author><name>Santeri Hukari</name><email>santeri.hukari@tuni.fi</email></author><entry><title type="html">Add strava social icon to Jekyll theme minima</title><link href="/2021/07/21/add-strava-social-icon.html" rel="alternate" type="text/html" title="Add strava social icon to Jekyll theme minima" /><published>2021-07-21T00:00:00+03:00</published><updated>2021-07-21T00:00:00+03:00</updated><id>/2021/07/21/add-strava-social-icon</id><content type="html" xml:base="/2021/07/21/add-strava-social-icon.html">&lt;h1 id=&quot;inner-workings-of-footer-component&quot;&gt;Inner workings of footer-component&lt;/h1&gt;
&lt;p&gt;The file footer.html includes the more specific layout of the footer, in where the social icons are shown. It is found under the path &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The file refers to another file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts/social.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;All &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;social.html&lt;/code&gt; includes is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; html-element, which checks the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; for personal information for certain platforms. The page will then show a list with an icon (which links to the user profile on the platform) for each platform with configured information in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;ss&quot;&gt;minima:
    date_format: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%b %-d, %Y&quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;social_links:
      github: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;santerihukari&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;linkedin: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;santerihukari&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;strava: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;33399886&quot;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;telegram: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;santerihukari&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;instagram: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;santerihukari&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As seen in the clip above from my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;, I’ve defined my strava user-id along with username on other platforms. Strava uses user-id instead of username in the url, which is why an username isn’t used.&lt;/p&gt;

&lt;h1 id=&quot;creating-the-icon-coherent-with-the-minima-theme&quot;&gt;Creating the icon coherent with the minima theme.&lt;/h1&gt;
&lt;p&gt;First a suitable logo should be found. Here I simply googled strava, and took the first square logo which seemed to fit in. The only problem was that the color was wrong.&lt;/p&gt;

&lt;p&gt;I downloaded the logo in png-format, transformed it to grayscale using &lt;a href=&quot;https://www11.lunapic.com/editor/?action=twotone&quot;&gt;lunapic&lt;/a&gt; for easier handling with &lt;a href=&quot;pngtosvg.com&quot;&gt;pngtosvg&lt;/a&gt;, which can be used to reduce the amount of colors used in an image, and then transform to svg. Lastly, I used &lt;a href=&quot;https://vectorpaint.yaks.co.nz/&quot;&gt;vectorpaint&lt;/a&gt; to fine-tune the color code of the logo according to the one found in included in minima theme icons. The color code was figured out using &lt;a href=&quot;https://html-color-codes.info/colors-from-image/&quot;&gt;html-color-codes.info&lt;/a&gt;. It is possible that there are tools available which would make this easier, photoshop for one.&lt;/p&gt;

&lt;p&gt;Since svg is based on vector graphics, a logo can be expressed with a snip of code, which is greatly used by minima; there is a specific file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/minima-social-icons.svg&lt;/code&gt;, which contains the code needed for the icons. So no extra files are necessary to be added. Simply adding the svg-code of the logo in the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/minima-social-icons.svg&lt;/code&gt; is enough. Below you can see the code snippet used to generate strava-logo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;symbol&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;strava&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;rect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;backgroundrect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stroke=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;g&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;currentLayer&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;Layer 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M0,0 h16 v16 H0 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#828282&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;svg_1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;selected&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill-opacity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;g&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill-rule=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;evenodd&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;svg_2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill-opacity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M6.9 8.8l2.5 4.5 2.4-4.5h-1.5l-.9 1.7-1-1.7z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;opacity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.6&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;svg_3&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill-opacity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M7.2 2.5l3.1 6.3H4zm0 3.8l1.2 2.5H5.9z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;svg_4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill-opacity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/symbol&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code above could possibly be shortened a lot, but it works as is, and looks good, so there is no need to change it for this project.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;{%- if social.strava -%}&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.strava.com/athletes/{{ social.strava | cgi_escape | escape }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ social.strava | escape }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;svg-icon grey&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;use&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xlink:href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ '/assets/minima-social-icons.svg#strava' | relative_url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/use&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;{%- endif -%}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Santeri Hukari</name><email>santeri.hukari@tuni.fi</email></author><summary type="html">Inner workings of footer-component The file footer.html includes the more specific layout of the footer, in where the social icons are shown. It is found under the path _layouts/.</summary></entry><entry><title type="html">Reflection about the future content of the website</title><link href="/website/2021/07/21/todo-list.html" rel="alternate" type="text/html" title="Reflection about the future content of the website" /><published>2021-07-21T00:00:00+03:00</published><updated>2021-07-21T00:00:00+03:00</updated><id>/website/2021/07/21/todo-list</id><content type="html" xml:base="/website/2021/07/21/todo-list.html">&lt;h1 id=&quot;sketching-the-layout&quot;&gt;Sketching the layout&lt;/h1&gt;
&lt;p&gt;About:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Includes an introduction of me, which gives an understanding of what I value, what drives me and what I’m seeking for.
Blog&lt;/li&gt;
  &lt;li&gt;Everything I write about&lt;/li&gt;
  &lt;li&gt;Should maybe be split by topics/subjects. Easy to find content by subheadings.&lt;/li&gt;
  &lt;li&gt;I feel I should focus more on showing what I’m interested in by writing about the topics instead of listing my interests. If someone is interested to know what I’m interested in, they’re free to read, and my job is to make the text interesting and easily approachable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;inspiration-for-the-content-and-appearance&quot;&gt;Inspiration for the content and appearance&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://jreel.github.io/&quot;&gt;jreel.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://vakila.github.io/&quot;&gt;vakila.github.io&lt;/a&gt;&lt;/p&gt;</content><author><name>Santeri Hukari</name><email>santeri.hukari@tuni.fi</email></author><category term="website" /><summary type="html">Sketching the layout About: Includes an introduction of me, which gives an understanding of what I value, what drives me and what I’m seeking for. Blog Everything I write about Should maybe be split by topics/subjects. Easy to find content by subheadings. I feel I should focus more on showing what I’m interested in by writing about the topics instead of listing my interests. If someone is interested to know what I’m interested in, they’re free to read, and my job is to make the text interesting and easily approachable.</summary></entry><entry><title type="html">Project idea: Wirelessly readable real-time temperature and humidity sensor</title><link href="/website/2021/07/19/project-idea-wirelessly-readable-real-time-temperature-and-humidity-sensor.html" rel="alternate" type="text/html" title="Project idea: Wirelessly readable real-time temperature and humidity sensor" /><published>2021-07-19T00:30:00+03:00</published><updated>2021-07-19T00:30:00+03:00</updated><id>/website/2021/07/19/project-idea-wirelessly-readable-real-time-temperature-and-humidity-sensor</id><content type="html" xml:base="/website/2021/07/19/project-idea-wirelessly-readable-real-time-temperature-and-humidity-sensor.html">&lt;h1 id=&quot;project-idea-wirelessly-readable-real-time-temperature-and-humidity-sensor&quot;&gt;Project idea: Wirelessly readable real-time temperature and humidity sensor&lt;/h1&gt;
&lt;p&gt;A wireless temperature and humidity indicator  requires a microcontroller that reads temperature and humidity data from a sensor.&lt;/p&gt;

&lt;p&gt;The sensor can either transmit raw data (ie. voltage depending on the temperature) or serialized data (another circuit that translates raw data to a form that is easier to be used).&lt;/p&gt;

&lt;p&gt;Now that we have a microcontroller and a sensor, we need to find a way to power this system, and to transmit the data somewhere we can read it and make conclusions about it.&lt;/p&gt;

&lt;p&gt;Since we have defined the system to be wireless, it uses an independent power source. Since we don’t need it to work forever, a battery is sufficient. To make sure the voltage between the microcontroller and battery are compatible, we also should use a voltage regulator.&lt;/p&gt;

&lt;p&gt;We also want to be able to read the data in real-time. This requires a wireless connection to the internet. We don’t want to spend any extra money monthly for keeping the connection up, so we are limited to WLAN, and areas that have free WLAN.&lt;/p&gt;

&lt;p&gt;Components used are planned to be as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Power: &lt;a href=&quot;https://www.ebay.com/itm/265143180192&quot;&gt;Panasonic NCR18650B 3,7 V Li-Ionen Akku mit PCB Schutzelektronik 3400mAh 6,8A&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Microcontroller (with wifi): &lt;a href=&quot;https://www.ebay.com/itm/252718027546&quot;&gt;NodeMCU V3.4 ESP8266 ESP-12 E Lua CH340 WiFI WLan IoT Arduino Lolin Mini Micro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Temperature &amp;amp; humidity sensor: &lt;a href=&quot;https://www.ebay.com/itm/363473330848&quot;&gt;DHT22/AM2302 Digital Temperature and Humidity Sensor Replace New SHT11 W2H3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Voltage regulator &lt;a href=&quot;https://www.ebay.com/itm/362691790010&quot;&gt;10Pcs Ht7333-A 7333-A Ht7333 Ht7333A-1 To92 Low Power Consumption Ldo S&amp;amp;K&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Some wires and a case.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The components above should be all we need for the hardware side. Schematic for the connections of the components is not discussed here.&lt;/p&gt;

&lt;p&gt;Software is split into two parts; microcontroller and the outside. The microcontroller is required to transmit the data collected from the sensor in a predefined form to work as an independent data source able to communicate with a larger network. The outside is responsible for storing and representing the data. Software is not discussed further.&lt;/p&gt;

&lt;p&gt;For the future reference, here are some pointers about what to go deeper with possibly:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Schematics&lt;/li&gt;
  &lt;li&gt;Documentation based on easy reproducibility&lt;/li&gt;
  &lt;li&gt;Building process&lt;/li&gt;
  &lt;li&gt;Testing process&lt;/li&gt;
  &lt;li&gt;Pros and cons about the components used, and reflection about improvement&lt;/li&gt;
  &lt;li&gt;Software for the microcontroller&lt;/li&gt;
  &lt;li&gt;API definitions&lt;/li&gt;
  &lt;li&gt;Representation and accessibility of the data&lt;/li&gt;
  &lt;li&gt;Minimizing power usage to make batteries last longer between charges&lt;/li&gt;
  &lt;li&gt;Literature review -based reflection instead of massive testing&lt;/li&gt;
  &lt;li&gt;Feasibility of the system to be used in real world&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;p&gt;A project similar to this: &lt;a href=&quot;https://tzapu.com/minimalist-battery-powered-esp8266-wifi-temperature-logger/&quot;&gt;Battery Powered ESP8266 WiFi Temperature and Humidity Logger&lt;/a&gt;&lt;/p&gt;</content><author><name>Santeri Hukari</name><email>santeri.hukari@tuni.fi</email></author><category term="website" /><summary type="html">Project idea: Wirelessly readable real-time temperature and humidity sensor A wireless temperature and humidity indicator requires a microcontroller that reads temperature and humidity data from a sensor.</summary></entry><entry><title type="html">Jekyll sample blog post</title><link href="/jekyll/update/2021/03/29/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Jekyll sample blog post" /><published>2021-03-29T03:54:25+03:00</published><updated>2021-03-29T03:54:25+03:00</updated><id>/jekyll/update/2021/03/29/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2021/03/29/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Santeri Hukari</name><email>santeri.hukari@tuni.fi</email></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>